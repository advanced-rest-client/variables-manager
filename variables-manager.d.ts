/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   variables-manager.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

declare namespace LogicElements {

  /**
   * A manager for environments and variables. Non UI element that manages variables
   * state and handle data storage.
   *
   * ### Example
   *
   * ```html
   * <variables-manager></variables-manager>
   * ```
   *
   * ## New in version 2
   *
   * - PouchDB is optional dependency. Add your own version of PouchDB to use the
   * component.
   * - Update/Delete actions has been moved to `arc-models/variables-model`
   */
  class VariablesManager extends
    EventsTargetMixin(
    Object) {

    /**
     * Currently loaded environment.
     */
    environment: string|null|undefined;

    /**
     * Selected environment object from the data store if different than
     * "default".
     */
    _env: object|null|undefined;
    _vars: any[]|null|undefined;

    /**
     * List of variables associated with current `environment`.
     */
    readonly variables: any[]|null|undefined;

    /**
     * List of variables that overrides all existing variables
     * (system or app) and exists only in memory.
     */
    inMemVariables: any[]|null|undefined;

    /**
     * When set it includes system variables into the list of variables.
     * This should be a map of system variables.
     */
    systemVariables: object|null;
    readonly _sysVars: any[]|null|undefined;

    /**
     * A flag to determine of the component is fully initialized.
     */
    readonly initialized: boolean|null|undefined;

    /**
     * When set the `_sysVars` will not be computed and therefore included
     * into variables list.
     */
    sysVariablesDisabled: boolean|null|undefined;

    /**
     * When set the application (local) defined variables are not included.
     */
    appVariablesDisabled: boolean|null|undefined;
    connectedCallback(): void;
    _attachListeners(node: any): void;
    _detachListeners(node: any): void;

    /**
     * Initializes the element.
     */
    _initialize(): void;

    /**
     * Computes list of variables object for system variables
     *
     * @param systemVariables Key - value pairs of system variables
     * @param sysVariablesDisabled If true it always returns `false`.
     * @returns List of variables representing system variables.
     */
    _computeSysVars(systemVariables: object|null, sysVariablesDisabled: Boolean|null): Array<object|null>|null|undefined;

    /**
     * Handler for `environment-current` dispatched by managers to ask
     * for current environment.
     */
    _envNameHandler(e: CustomEvent|null): void;

    /**
     * Handler for the `environment` property change.
     *
     * Fires a `selected-environment-changed` with a debouncer set to next render
     * frame.
     */
    _environmentChanged(): void;

    /**
     * Reads environment object from the data stopre if different than `default`.
     *
     * @param environment Environment value.
     */
    _readEnvObjectData(environment: String|null): Promise<any>|null;

    /**
     * Lists app, sys and in mem variables into single array.
     *
     * @returns List of all variables.
     */
    listAllVariables(): Array<object|null>|null;

    /**
     * Combines both app variables and in memory variables
     * and informs listeners about the change.
     */
    _notifyVarsListChanged(): void;

    /**
     * Updates the list of variables for current environment.
     *
     * This task is asynchronus.
     *
     * @returns Resolved promise with the list of variables for the
     * environment.
     */
    _updateVariablesList(): Promise<any>|null;

    /**
     * Handles exceptions when occur by logging them to the console and
     * sending an analytics report.
     *
     * @param cause An error object with description.
     */
    _handleException(cause: Error|null): void;

    /**
     * A handler for the `selected-environment-changed` custom event.
     * Updates the `environment` property if the event was sent by other elemenet
     * than `this`.
     */
    _envChnageHandler(e: CustomEvent|null): void;

    /**
     * Handler for the `data-imported` custom event. Refreshes list of environmants
     * and variables.
     */
    _dataImportHandler(): void;

    /**
     * Handler for the `datastore-destroyed` custom event.
     */
    _onDatabaseDestroy(e: CustomEvent|null): void;
    _eventCancelled(e: any): any;
    _cancelEvent(e: any): void;

    /**
     * A handler for the `environment-updated` custom event.
     * Updates the environment in the data store.
     *
     * The `environment-updated` custom event should be cancellable or the event
     * won't be handled at all.
     */
    _envUpdateHandler(e: CustomEvent|null): void;

    /**
     * A handler for the `environment-deleted` custom event.
     * If deleted environment is current environment then it sets environment
     * to `default`.
     */
    _envDeleteHandler(e: CustomEvent|null): void;

    /**
     * A handler for the `variable-updated` custom event.
     * Updates the variable in the variables list if the environment name match.
     */
    _varUpdateHandler(e: CustomEvent|null): void;

    /**
     * Removes the valiable from the lsit of variables if the variable is
     * in the list.
     */
    _varDeleteHandler(e: Event|null): void;

    /**
     * A handler for `variable-store-action` dispatched by request actions logic.
     * Creates / updates a variable with new data.
     */
    _varStoreActionHandler(e: CustomEvent|null): Promise<any>|null;

    /**
     * @param name Variable name
     * @returns Index of the variable in the variables list or -1.
     */
    _variableIndexByName(name: String|null): Number|null;

    /**
     * Dispatches variable updated custom event to the model.
     *
     * @param value Variable to update
     */
    _updateVariable(value: object|null): Promise<any>|null;

    /**
     * In memory variable change - without storing it to the store.
     */
    _varUpdateActionHandler(e: CustomEvent|null): void;
    _sysVarsChanged(): void;
    _computeAppVars(record: any, appVariablesDisabled: any): any;
    _appVarsChanged(): void;
  }
}

declare global {

  interface HTMLElementTagNameMap {
    "variables-manager": LogicElements.VariablesManager;
  }
}

export {};
